{"version":3,"sources":["ucsc-medbook:reactive-table/lib/reactive_table.html","ucsc-medbook:reactive-table/lib/reactive_table_i18n.js","ucsc-medbook:reactive-table/lib/reactive_table.js","ucsc-medbook:reactive-table/lib/filter.js"],"names":[],"mappings":";;;;;;;;;AACA,sC;AACA,gF;AACA,kB;AACA,oC;AACA,kD;AACA,iB;AACA,0C;AACA,kD;AACA,mB;AACA,mC;AACA,2B;AACA,+B;AACA,6D;AACA,4C;AACA,yD;AACA,qB;AACA,2C;AACA,yE;AACA,uC;AACA,gC;AACA,gG;AACA,2B;AACA,sB;AACA,gC;AACA,2C;AACA,sC;AACA,sD;AACA,+D;AACA,uB;AACA,mD;AACA,mC;AACA,qC;AACA,uB;AACA,iF;AACA,mF;AACA,qC;AACA,8E;AACA,+D;AACA,uB;AACA,yD;AACA,yD;AACA,yB;AACA,+B;AACA,+D;AACA,c;AACA,qC;AACA,qF;AACA,a;AACA,uC;AACA,uB;AACA,yD;AACA,yD;AACA,yB;AACA,+B;AACA,+D;AACA,a;AACA,uC;AACA,+D;AACA,6C;AACA,gE;AACA,qB;AACA,2C;AACA,wE;AACA,0C;AACA,qD;AACA,0B;AACA,2F;AACA,Y;AACA,mC;AACA,qE;AACA,kF;AACA,0D;AACA,uD;AACA,uB;AACA,yC;AACA,2F;AACA,W;AACA,sD;AACA,uD;AACA,uB;AACA,kE;AACA,6D;AACA,yB;AACA,sD;AACA,kC;AACA,uB;AACA,+B;AACA,6B;AACA,gC;AACA,qG;AACA,8D;AACA,2B;AACA,iE;AACA,iC;AACA,4B;AACA,4C;AACA,oE;AACA,iB;AACA,+C;AACA,2B;AACA,iE;AACA,iC;AACA,4C;AACA,oE;AACA,iB;AACA,+C;AACA,iE;AACA,oE;AACA,2B;AACA,gD;AACA,gE;AACA,6B;AACA,qD;AACA,mF;AACA,mB;AACA,iB;AACA,2B;AACA,+D;AACA,mE;AACA,iB;AACA,4F;AACA,mC;AACA,+D;AACA,wD;AACA,wB;AACA,uD;AACA,U;AACA,6B;AACA,iF;AACA,S;AACA,6F;AACA,qD;AACA,qB;AACA,wD;AACA,0D;AACA,uB;AACA,4D;AACA,4D;AACA,yB;AACA,oD;AACA,mC;AACA,0F;AACA,gB;AACA,mC;AACA,0E;AACA,e;AACA,4D;AACA,oE;AACA,2B;AACA,gD;AACA,gE;AACA,6B;AACA,qD;AACA,mF;AACA,mB;AACA,iB;AACA,2B;AACA,+D;AACA,mE;AACA,iB;AACA,8B;AACA,6B;AACA,sB;AACA,8B;AACA,6B;AACA,sB;AACA,6D;AACA,gE;AACA,2B;AACA,sE;AACA,0F;AACA,6B;AACA,6D;AACA,2C;AACA,+C;AACA,6B;AACA,mE;AACA,mC;AACA,0B;AACA,+C;AACA,2C;AACA,2B;AACA,sE;AACA,0F;AACA,6B;AACA,6D;AACA,4C;AACA,+C;AACA,6B;AACA,mE;AACA,mC;AACA,0B;AACA,+C;AACA,2C;AACA,4D;AACA,yB;AACA,gE;AACA,+D;AACA,2B;AACA,wD;AACA,qC;AACA,4F;AACA,kB;AACA,qC;AACA,4E;AACA,iB;AACA,sC;AACA,sE;AACA,6B;AACA,kD;AACA,kE;AACA,+B;AACA,uD;AACA,qF;AACA,qB;AACA,mB;AACA,6B;AACA,iE;AACA,qE;AACA,mB;AACA,0C;AACA,2B;AACA,wD;AACA,qC;AACA,2E;AACA,kB;AACA,qC;AACA,4E;AACA,iB;AACA,sC;AACA,sE;AACA,6B;AACA,kD;AACA,kE;AACA,+B;AACA,uD;AACA,qF;AACA,qB;AACA,mB;AACA,6B;AACA,iE;AACA,qE;AACA,mB;AACA,0C;AACA,qC;AACA,iC;AACA,6B;AACA,kG;AACA,yD;AACA,qB;AACA,0C;AACA,+B;AACA,sG;AACA,W;AACA,oD;AACA,4E;AACA,uB;AACA,4D;AACA,4D;AACA,yB;AACA,oD;AACA,mC;AACA,0F;AACA,e;AACA,oC;AACA,yD;AACA,2B;AACA,gD;AACA,yD;AACA,6B;AACA,qD;AACA,kF;AACA,mB;AACA,iB;AACA,2B;AACA,+D;AACA,sF;AACA,iB;AACA,sC;AACA,iC;AACA,4C;AACA,iE;AACA,6D;AACA,qB;AACA,uC;AACA,8C;AACA,8C;AACA,0E;AACA,uB;AACA,6C;AACA,2D;AACA,gF;AACA,iF;AACA,4B;AACA,2B;AACA,oB;AACA,0B;AACA,oC;AACA,yB;AACA,+B;AACA,uE;AACA,a;AACA,4B;AACA,2B;AACA,oB;AACA,oD;AACA,wF;AACA,+C;AACA,oC;AACA,uD;AACA,gD;AACA,8D;AACA,uB;AACA,iD;AACA,oC;AACA,2B;AACA,yB;AACA,oB;AACA,6B;AACA,2B;AACA,oB;AACA,4B;AACA,2B;AACA,oB;AACA,+B;AACA,6E;AACA,+E;AACA,0B;AACA,yB;AACA,kB;AACA,wB;AACA,kC;AACA,uB;AACA,6B;AACA,qE;AACA,W;AACA,0B;AACA,yB;AACA,kB;AACA,kD;AACA,6E;AACA,+D;AACA,iE;AACA,kD;AACA,6D;AACA,uB;AACA,iD;AACA,gC;AACA,2B;AACA,2B;AACA,oB;AACA,4B;AACA,2B;AACA,oB;AACA,4B;AACA,yB;AACA,oB;AACA,gC;AACA,mD;AACA,mB;AACA,iB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AC3WA,gB;AACA,oB;AACA,yB;AACA,2B;AACA,qB;AACA,qC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,uC;AACA,qB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,yC;AACA,yB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,0B;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,yC;AACA,uB;AACA,iB;AACA,K;AACA,G;;AAEA,mB;AACA,oB;AACA,yB;AACA,wB;AACA,yC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,sC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,0C;AACA,yB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,sB;AACA,4B;AACA,6B;AACA,oC;AACA,sB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,yC;AACA,uB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,uC;AACA,uB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,wB;AACA,oB;AACA,mC;AACA,qB;AACA,kB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,2B;AACA,sB;AACA,wC;AACA,sB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,0B;AACA,sB;AACA,qC;AACA,qB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,oB;AACA,sC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,2B;AACA,sB;AACA,0C;AACA,uB;AACA,e;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AC5KA,wE;;AAEA,gC;AACA,8B;AACA,kB;;AAEA,+B;AACA,0D;AACA,+B;AACA,mE;AACA,6B;AACA,c;AACA,uB;AACA,O;AACA,K;;AAEA,e;AACA,E;;;AAGA,+D;AACA,0C;AACA,4C;AACA,0C;AACA,wC;AACA,Q;;AAEA,2C;AACA,uB;AACA,yB;AACA,sB;;AAEA,yE;AACA,sE;AACA,2C;AACA,yC;AACA,4F;AACA,qD;;AAEA,oD;AACA,oD;AACA,qD;;AAEA,uB;AACA,+B;AACA,8B;AACA,U;AACA,2B;;AAEA,6F;AACA,+B;AACA,0E;AACA,S;AACA,iC;AACA,0C;;AAEA,mC;AACA,oE;AACA,wC;AACA,yD;AACA,yD;AACA,+C;AACA,2C;;AAEA,gC;AACA,qC;AACA,iB;AACA,oB;AACA,4D;AACA,iC;AACA,a;AACA,U;AACA,wC;AACA,sE;AACA,U;AACA,qC;AACA,mD;AACA,0B;AACA,mB;AACA,2B;AACA,oB;AACA,sC;AACA,gD;AACA,U;AACA,K;AACA,Q;;;AAGA,2D;AACA,4C;AACA,4B;AACA,oB;AACA,K;AACA,gD;AACA,qD;AACA,qC;AACA,oB;AACA,K;AACA,iB;AACA,E;;AAEA,0D;AACA,4C;AACA,6B;AACA,qB;AACA,K;AACA,gD;AACA,qD;AACA,sC;AACA,qB;AACA,K;AACA,gB;AACA,E;;AAEA,E;AACA,mB;AACA,sD;AACA,4C;AACA,8B;AACA,wB;AACA,mB;AACA,O;AACA,E;;AAEA,yB;AACA,qB;AACA,wC;AACA,qC;AACA,kD;AACA,wF;;AAEA,oD;AACA,oC;AACA,qC;AACA,oD;AACA,kC;AACA,oD;AACA,yC;AACA,uC;AACA,e;AACA,oD;AACA,qC;AACA,kE;AACA,oC;AACA,oD;;AAEA,kE;AACA,sD;AACA,uD;;AAEA,gD;AACA,uC;AACA,c;AACA,0D;AACA,mD;AACA,c;AACA,qD;AACA,8C;AACA,c;AACA,uG;AACA,4C;AACA,sC;AACA,kC;AACA,sD;AACA,0D;AACA,+D;AACA,gB;AACA,yH;AACA,oD;AACA,S;AACA,K;AACA,oC;;AAEA,qE;AACA,oC;AACA,uC;AACA,yC;AACA,sE;AACA,K;;AAEA,yD;AACA,4C;AACA,sC;AACA,oD;AACA,c;AACA,mC;AACA,qC;AACA,c;AACA,mB;AACA,qB;AACA,uD;AACA,M;;AAEA,4E;AACA,kC;AACA,yC;AACA,4C;AACA,qD;AACA,mI;AACA,oB;AACA,M;;AAEA,uB;AACA,0B;AACA,2B;;AAEA,2C;AACA,wC;AACA,8C;AACA,gB;AACA,yB;AACA,S;AACA,M;;AAEA,0C;AACA,oD;AACA,iD;AACA,sE;AACA,mD;AACA,S;AACA,mC;AACA,8C;AACA,2H;AACA,mC;AACA,a;AACA,S;AACA,+B;AACA,M;;AAEA,uC;AACA,mB;AACA,0C;AACA,yD;AACA,K;AACA,4B;AACA,yG;AACA,iI;AACA,2H;;AAEA,2B;AACA,wC;AACA,gG;AACA,O;AACA,2K;;;AAGA,+F;AACA,uC;AACA,2B;AACA,iD;AACA,K;AACA,gC;;AAEA,+G;AACA,wF;;AAEA,uG;AACA,sG;AACA,4K;AACA,+G;;AAEA,mG;AACA,wE;;AAEA,uF;;AAEA,kD;AACA,gE;AACA,uE;AACA,wE;AACA,0C;AACA,gB;AACA,2C;AACA,S;AACA,Y;AACA,0D;AACA,K;AACA,2E;AACA,I;AACA,0C;;AAEA,yB;AACA,iC;AACA,mC;AACA,K;;AAEA,sC;;AAEA,kD;;AAEA,2B;AACA,E;;;AAGA,kD;AACA,4E;AACA,C;;AAEA,gC;AACA,c;AACA,6C;AACA,sB;AACA,sE;AACA,kE;AACA,Y;AACA,0G;AACA,0D;AACA,8C;AACA,K;AACA,E;;AAEA,sD;AACA,0C;AACA,0D;AACA,wC;AACA,oB;AACA,kC;AACA,kC;AACA,iB;AACA,c;AACA,U;AACA,sD;AACA,C;;;AAGA,gC;;AAEA,4B;AACA,2C;AACA,yE;AACA,4C;AACA,S;AACA,2C;AACA,M;;AAEA,2B;AACA,gC;AACA,M;;AAEA,mC;AACA,+D;AACA,mC;AACA,qC;AACA,iC;AACA,M;;AAEA,kC;AACA,8D;AACA,M;;AAEA,oC;AACA,4B;AACA,M;;AAEA,2B;AACA,gC;AACA,M;;AAEA,mC;AACA,8C;AACA,4B;AACA,S;AACA,gB;AACA,6C;AACA,qC;AACA,gB;AACA,mC;AACA,S;AACA,mB;AACA,M;;AAEA,uC;AACA,4C;AACA,4B;AACA,S;AACA,gB;AACA,2C;AACA,8C;AACA,gD;AACA,gB;AACA,iC;AACA,S;AACA,mB;AACA,M;AACA,E;AACA,oC;AACA,4F;AACA,M;;AAEA,6B;AACA,kE;AACA,M;;AAEA,8B;AACA,gD;AACA,yD;AACA,M;;AAEA,+B;AACA,mE;AACA,M;;AAEA,8B;AACA,6C;AACA,yB;AACA,kF;AACA,gD;AACA,gB;AACA,gD;AACA,S;AACA,6D;AACA,yC;;AAEA,+E;AACA,2B;AACA,0C;AACA,gB;AACA,8C;AACA,6D;AACA,6E;AACA,0D;AACA,8B;AACA,S;AACA,M;;AAEA,iC;AACA,uE;AACA,qC;AACA,M;;AAEA,+B;AACA,0B;AACA,4C;AACA,2D;AACA,gB;AACA,qB;AACA,wC;AACA,e;AACA,e;AACA,iB;AACA,yD;AACA,qD;AACA,oD;AACA,mF;;AAEA,+C;AACA,qD;AACA,2C;AACA,8G;;;AAGA,gC;AACA,gE;AACA,0D;AACA,+B;AACA,gC;AACA,oB;AACA,sE;;AAEA,gC;AACA,gE;;AAEA,qE;AACA,8D;AACA,6E;AACA,mB;AACA,2C;AACA,8C;AACA,iB;AACA,wD;AACA,oB;AACA,+D;AACA,mC;;AAEA,4D;;AAEA,sF;;AAEA,0D;AACA,oC;AACA,+B;AACA,gC;AACA,mB;AACA,a;AACA,S;AACA,M;;AAEA,4B;AACA,uC;AACA,M;;AAEA,kC;;AAEA,oC;AACA,sC;AACA,M;;AAEA,oC;AACA,0C;AACA,M;;AAEA,mC;AACA,0C;AACA,M;;AAEA,kC;AACA,qD;AACA,gD;AACA,uC;AACA,M;;AAEA,oC;AACA,0D;AACA,0D;AACA,2C;AACA,K;AACA,G;;AAEA,+B;AACA,6C;AACA,2C;AACA,uD;AACA,+D;AACA,O;AACA,yD;AACA,2C;AACA,0F;AACA,iD;AACA,gE;AACA,iD;AACA,0E;AACA,8D;AACA,gB;AACA,sD;AACA,S;AACA,4C;AACA,M;;AAEA,uE;AACA,2C;AACA,qC;AACA,kD;AACA,iE;AACA,0E;AACA,2B;AACA,gC;AACA,6D;AACA,8D;AACA,S;AACA,M;;AAEA,gI;AACA,2C;AACA,+C;AACA,2C;AACA,4C;AACA,M;;AAEA,gF;AACA,+D;AACA,iE;AACA,yC;AACA,uD;AACA,M;;AAEA,8E;AACA,+D;AACA,gD;AACA,sC;AACA,kC;AACA,S;AACA,8B;AACA,0B;AACA,S;AACA,qE;AACA,yC;AACA,uD;AACA,M;;AAEA,yE;AACA,2C;AACA,6D;AACA,0D;AACA,4C;AACA,M;;AAEA,qE;AACA,2C;AACA,6D;AACA,0D;AACA,4C;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AChlBA,iD;AACA,mC;AACA,iC;AACA,mB;AACA,sC;;AAEA,sB;AACA,sB;AACA,iC;AACA,kB;AACA,sC;AACA,wE;AACA,wB;AACA,wB;AACA,c;AACA,6C;AACA,O;AACA,6C;AACA,sC;AACA,qD;AACA,c;AACA,uB;AACA,gD;AACA,O;AACA,Y;AACA,yB;AACA,K;AACA,K;AACA,iB;AACA,E;;AAEA,kC;AACA,0D;AACA,E;;AAEA,sD;AACA,4B;AACA,2C;AACA,iC;AACA,G;AACA,wB;AACA,yE;AACA,kD;AACA,0C;AACA,S;AACA,Y;AACA,kD;AACA,uF;AACA,S;AACA,K;AACA,G;AACA,6B;AACA,qB;AACA,e;AACA,4C;AACA,2C;AACA,2C;AACA,6C;AACA,O;AACA,+B;AACA,uC;AACA,uD;AACA,uB;AACA,iD;AACA,oC;;AAEA,4C;AACA,+B;AACA,qE;AACA,4C;AACA,S;AACA,S;AACA,mC;AACA,mD;AACA,oC;AACA,O;AACA,O;AACA,G;AACA,qD;AACA,E","file":"/packages/ucsc-medbook_reactive-table.js","sourcesContent":["\nTemplate.__checkName(\"reactiveTable\");\nTemplate[\"reactiveTable\"] = new Template(\"Template.reactiveTable\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"context\"));\n  }, function() {\n    return [ \"\\n  \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"ready\"));\n    }, function() {\n      return [ \"\\n    \", HTML.DIV({\n        \"class\": \"clearfix\"\n      }, \"\\n      \", HTML.DIV({\n        \"class\": \"reactive-table-options col-sm-8 pull-right\"\n      }, \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showFilter\"));\n      }, function() {\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"form-group reactive-table-filter col-sm-8 pull-right\"\n        }, \"\\n            \", HTML.DIV({\n          \"class\": \"input-group\"\n        }, \"\\n                \", HTML.LABEL(\" Filter nulls\"), \"\\n                \", HTML.INPUT({\n          type: \"checkbox\",\n          checked: \"\",\n          \"class\": \"filterNulls\"\n        }), \"\\n              \", HTML.SPAN({\n          \"class\": \"input-group-addon\"\n        }, \"\\n                \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"useFontAwesome\"));\n        }, function() {\n          return [ \"\\n                  \", HTML.I({\n            \"class\": \"fa fa-filter\"\n          }), \"\\n                \" ];\n        }, function() {\n          return [ \"\\n                  \", Blaze.View(\"lookup:i18n\", function() {\n            return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.filter\");\n          }), \"\\n                \" ];\n        }), \"\\n              \"), \"\\n                  \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"useFontAwesome\"));\n        }, function() {\n          return [ \"\\n                    \", HTML.INPUT({\n            \"class\": \"reactive-table-input form-control\",\n            type: \"text\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"filter\"));\n            },\n            placeholder: function() {\n              return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.filter\");\n            }\n          }), \"\\n                  \" ];\n        }, function() {\n          return [ \"\\n                    \", HTML.INPUT({\n            \"class\": \"reactive-table-input form-control\",\n            type: \"text\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"filter\"));\n            }\n          }), \"\\n                  \" ];\n        }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showColumnToggles\"));\n      }, function() {\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"reactive-table-columns-dropdown col-sm-4 pull-right\"\n        }, \"\\n            \", HTML.BUTTON({\n          \"class\": \"btn btn-default dropdown-toggle\",\n          id: function() {\n            return [ \"reactive-table-add-column-\", Spacebars.mustache(view.lookup(\"id\")) ];\n          },\n          \"data-toggle\": \"dropdown\"\n        }, \"\\n              \", Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.columns\");\n        }), \"\\n            \"), \"\\n            \", HTML.UL({\n          \"class\": \"dropdown-menu dropdown-menu-right\",\n          role: \"menu\",\n          \"aria-labelledby\": function() {\n            return [ \"reactive-table-add-column-\", Spacebars.mustache(view.lookup(\"id\")) ];\n          }\n        }, \"\\n              \", Blaze.Each(function() {\n          return Spacebars.call(view.lookup(\"fields\"));\n        }, function() {\n          return [ \"\\n                \", Blaze.Unless(function() {\n            return Spacebars.call(view.lookup(\"hideToggle\"));\n          }, function() {\n            return [ \"\\n                  \", HTML.LI({\n              role: \"presentation\"\n            }, HTML.A({\n              role: \"menuitem\",\n              tabindex: \"-1\",\n              \"data-target\": \"#\"\n            }, \"\\n                    \", HTML.LABEL(\"\\n                      \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isVisible\"));\n            }, function() {\n              return [ \"\\n                        \", HTML.INPUT({\n                type: \"checkbox\",\n                checked: \"\",\n                \"data-fieldid\": function() {\n                  return Spacebars.mustache(view.lookup(\"fieldId\"));\n                }\n              }), \"\\n                      \" ];\n            }, function() {\n              return [ \"\\n                        \", HTML.INPUT({\n                type: \"checkbox\",\n                \"data-fieldid\": function() {\n                  return Spacebars.mustache(view.lookup(\"fieldId\"));\n                }\n              }), \"\\n                      \" ];\n            }), \"\\n                      \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"labelIsTemplate\"));\n            }, function() {\n              return Spacebars.With(function() {\n                return Spacebars.call(view.lookup(\"labelData\"));\n              }, function() {\n                return Spacebars.include(function() {\n                  return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"label\"));\n                });\n              });\n            }, function() {\n              return Blaze.View(\"lookup:getLabel\", function() {\n                return Spacebars.mustache(view.lookup(\"getLabel\"));\n              });\n            }), \"\\n                    \"), \"\\n                  \")), \"\\n                \" ];\n          }), \"\\n              \" ];\n        }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.TABLE({\n        id: function() {\n          return Spacebars.mustache(view.lookup(\"id\"));\n        },\n        \"class\": function() {\n          return [ Spacebars.mustache(view.lookup(\"class\")), \" reactive-table\" ];\n        }\n      }, \"\\n      \", HTML.THEAD(\"\\n        \", HTML.TR(\"\\n          \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"fields\"));\n      }, function() {\n        return [ \"\\n            \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isVisible\"));\n        }, function() {\n          return [ \"\\n              \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isSortKey\"));\n          }, function() {\n            return [ \"\\n                \", HTML.TH({\n              \"class\": function() {\n                return [ \"sortable \", Spacebars.mustache(view.lookup(\"getHeaderClass\")) ];\n              },\n              fieldid: function() {\n                return Spacebars.mustache(view.lookup(\"getFieldFieldId\"));\n              }\n            }, \"\\n                  \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"labelIsTemplate\"));\n            }, function() {\n              return Spacebars.With(function() {\n                return Spacebars.call(view.lookup(\"labelData\"));\n              }, function() {\n                return Spacebars.include(function() {\n                  return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"label\"));\n                });\n              });\n            }, function() {\n              return Blaze.View(\"lookup:getLabel\", function() {\n                return Spacebars.mustache(view.lookup(\"getLabel\"));\n              });\n            }), HTML.CharRef({\n              html: \"&nbsp;\",\n              str: \" \"\n            }), HTML.CharRef({\n              html: \"&nbsp;\",\n              str: \" \"\n            }), \"\\n                  \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isAscending\"));\n            }, function() {\n              return [ \"\\n                    \", Blaze.If(function() {\n                return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"useFontAwesome\"));\n              }, function() {\n                return [ \"\\n                      \", HTML.I({\n                  \"class\": \"fa fa-sort-asc\"\n                }), \"\\n                    \" ];\n              }, function() {\n                return [ \"\\n                      \", HTML.CharRef({\n                  html: \"&#x25B2;\",\n                  str: \"▲\"\n                }), \"\\n                    \" ];\n              }), \"\\n                  \" ];\n            }, function() {\n              return [ \"\\n                    \", Blaze.If(function() {\n                return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"useFontAwesome\"));\n              }, function() {\n                return [ \"\\n                      \", HTML.I({\n                  \"class\": \"fa fa-sort-desc\"\n                }), \"\\n                    \" ];\n              }, function() {\n                return [ \"\\n                      \", HTML.CharRef({\n                  html: \"&#x25BC;\",\n                  str: \"▼\"\n                }), \"\\n                    \" ];\n              }), \"\\n                  \" ];\n            }), \"\\n                \"), \"\\n              \" ];\n          }, function() {\n            return [ \"\\n                \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isSortable\"));\n            }, function() {\n              return [ \"\\n                  \", HTML.TH({\n                \"class\": function() {\n                  return [ Spacebars.mustache(view.lookup(\"getHeaderClass\")), \" sortable\" ];\n                },\n                fieldid: function() {\n                  return Spacebars.mustache(view.lookup(\"getFieldFieldId\"));\n                }\n              }, Blaze.If(function() {\n                return Spacebars.call(view.lookup(\"labelIsTemplate\"));\n              }, function() {\n                return Spacebars.With(function() {\n                  return Spacebars.call(view.lookup(\"labelData\"));\n                }, function() {\n                  return Spacebars.include(function() {\n                    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"label\"));\n                  });\n                });\n              }, function() {\n                return Blaze.View(\"lookup:getLabel\", function() {\n                  return Spacebars.mustache(view.lookup(\"getLabel\"));\n                });\n              })), \"\\n                \" ];\n            }, function() {\n              return [ \"\\n                  \", HTML.TH({\n                \"class\": function() {\n                  return Spacebars.mustache(view.lookup(\"getHeaderClass\"));\n                },\n                fieldid: function() {\n                  return Spacebars.mustache(view.lookup(\"getFieldFieldId\"));\n                }\n              }, Blaze.If(function() {\n                return Spacebars.call(view.lookup(\"labelIsTemplate\"));\n              }, function() {\n                return Spacebars.With(function() {\n                  return Spacebars.call(view.lookup(\"labelData\"));\n                }, function() {\n                  return Spacebars.include(function() {\n                    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"label\"));\n                  });\n                });\n              }, function() {\n                return Blaze.View(\"lookup:getLabel\", function() {\n                  return Spacebars.mustache(view.lookup(\"getLabel\"));\n                });\n              })), \"\\n                \" ];\n            }), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.TBODY(\"\\n        \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"sortedRows\"));\n      }, function() {\n        return [ \"\\n          \", HTML.TR({\n          \"class\": function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"..\"), \"rowClass\"), view.lookup(\".\"));\n          }\n        }, \"\\n            \", Blaze.Each(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"fields\"));\n        }, function() {\n          return [ \"\\n              \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isVisible\"));\n          }, function() {\n            return [ \"\\n                \", HTML.TD({\n              \"class\": function() {\n                return Spacebars.mustache(view.lookup(\"getCellClass\"), view.lookup(\"..\"));\n              }\n            }, Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"tmpl\"));\n            }, function() {\n              return Spacebars.With(function() {\n                return Spacebars.call(view.lookup(\"..\"));\n              }, function() {\n                return Spacebars.include(function() {\n                  return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"tmpl\"));\n                });\n              });\n            }, function() {\n              return Blaze.View(\"lookup:getField\", function() {\n                return Spacebars.mustache(view.lookup(\"getField\"), view.lookup(\"..\"));\n              });\n            })), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n      \"), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showNavigation\"));\n      }, function() {\n        return [ \"\\n      \", HTML.DIV({\n          \"class\": \"reactive-table-navigation\"\n        }, \"\\n        \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"showNavigationRowsPerPage\"));\n        }, function() {\n          return [ \"\\n          \", HTML.DIV({\n            \"class\": \"form-inline form-group rows-per-page\"\n          }, \"\\n            \", HTML.LABEL(Blaze.View(\"lookup:i18n\", function() {\n            return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.show\");\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), HTML.INPUT({\n            \"class\": \"form-control\",\n            type: \"text\",\n            value: function() {\n              return Spacebars.mustache(view.lookup(\"getRowsPerPage\"));\n            }\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), Blaze.View(\"lookup:i18n\", function() {\n            return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.rowsPerPage\");\n          })), \"\\n          \"), \"\\n        \" ];\n        }), \"\\n        \", HTML.DIV({\n          \"class\": \"form-inline form-group page-number\"\n        }, \"\\n          \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isntFirstPage\"));\n        }, function() {\n          return [ \"\\n            \", HTML.LABEL({\n            \"class\": \"previous-page\"\n          }, HTML.CharRef({\n            html: \"&lt;\",\n            str: \"<\"\n          })), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), \"\\n          \" ];\n        }), \"\\n          \", HTML.LABEL(Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.page\");\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.INPUT({\n          \"class\": \"form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"getCurrentPage\"));\n          }\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), Blaze.View(\"lookup:i18n\", function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.of\");\n        }), \" \", Blaze.View(\"lookup:getPageCount\", function() {\n          return Spacebars.mustache(view.lookup(\"getPageCount\"));\n        })), \"\\n          \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isntLastPage\"));\n        }, function() {\n          return [ \"\\n            \", HTML.LABEL({\n            \"class\": \"next-page\"\n          }, HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), HTML.CharRef({\n            html: \"&gt;\",\n            str: \">\"\n          })), \"\\n          \" ];\n        }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n      }), \"\\n  \" ];\n    }), \"\\n  \" ];\n  });\n}));\n","i18n.map('en', {\n    reactiveTable: {\n        filter: 'Filter',\n        columns: 'Columns',\n        show: 'Show',\n        rowsPerPage: 'rows per page',\n        page: 'Page',\n        of: 'of'\n    }\n});\n\ni18n.map('fr', {\n    reactiveTable: {\n        filter: 'Filtre',\n        show: 'Voir',\n        rowsPerPage: 'lignes par page',\n        page: 'page',\n        of: 'sur'\n    }\n});\n\ni18n.map('ru', {\n    reactiveTable: {\n        filter: 'Фильтр',\n        show: 'Показать',\n        rowsPerPage: 'линий на странице',\n        page: 'Страница',\n        of: 'из'\n    }\n});\n\ni18n.map('es', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show:   'Mostrar',\n        rowsPerPage: 'filas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('nl', {\n    reactiveTable: {\n        filter: 'Filter',\n        show:   'Toon',\n        rowsPerPage: 'regels per pagina',\n        page: 'Pagina',\n        of: 'van'\n    }\n});\n\ni18n.map('pt-br', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show: 'Mostrar',\n        rowsPerPage: 'linhas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('it', {\n    reactiveTable: {\n        filter: 'Filtra',\n        show: 'Mostra',\n        rowsPerPage: 'righe per pagina',\n        page: 'Pagina',\n        of: 'di'\n    }\n});\n\ni18n.map('sv', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Visa',\n        rowsPerPage: 'rader per sida',\n        page: 'Sida',\n        of: 'av'\n    }\n});\n\ni18n.map('ua', {\n    reactiveTable: {\n        filter: 'Фільтр',\n        show: 'Показати',\n        rowsPerPage: 'рядків на сторінці',\n        page: 'Сторінка',\n        of: 'з'\n    }\n});\n\ni18n.map('tr', {\n    reactiveTable: {\n        filter: 'Süz',\n        columns: 'Sütunlar',\n        show: 'Sayfa başına',\n        rowsPerPage: 'satır göster',\n        page: 'Sayfa',\n        of: ' / '\n    }\n});\n\ni18n.map('sk', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Zobraz',\n        rowsPerPage: 'riadkov na stranu',\n        page: 'Strana',\n        of: 'z'\n    }\n});\n\ni18n.map('cs', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Zobraz',\n        rowsPerPage: 'řádků na stranu',\n        page: 'Strana',\n        of: 'z'\n    }\n});\n\ni18n.map('he', {\n    reactiveTable: {\n        filter: 'פילטר',\n        show: 'הצג',\n        rowsPerPage: 'שורות לעמוד',\n        page: 'עמוד',\n        of: 'מתוך'\n    }\n});\n\ni18n.map('de', {\n    reactiveTable: {\n        filter: 'Filter',\n        columns: 'Spalten',\n        show: 'Zeige',\n        rowsPerPage: 'Zeilen pro Seite',\n        page: 'Seite',\n        of: 'von'\n    }\n});\n\ni18n.map('fi', {\n    reactiveTable: {\n        filter: 'Suodata',\n        show: 'Näytä',\n        rowsPerPage: 'riviä sivulla',\n        page: 'Sivu',\n        of: ' / '\n    }\n});\n\ni18n.map('no', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Vis',\n        rowsPerPage: 'rader per side',\n        page: 'Side',\n        of: 'av'\n    }\n});\n\ni18n.map('pl', {\n    reactiveTable: {\n        filter: 'Szukaj',\n        columns: 'Kolumny',\n        show: 'Pokaż',\n        rowsPerPage: 'pozycji na stronie',\n        page: 'Strona',\n        of: 'z'\n    }\n});\n","var ReactiveTableCounts = new Mongo.Collection(\"reactive-table-counts\");\n\nvar get = function(obj, field) {\n  var keys = field.split('.');\n  var value = obj;\n\n  _.each(keys, function (key) {\n      if (_.isObject(value) && _.isFunction(value[key])) {\n          value = value[key]();\n      } else if (_.isObject(value) && !_.isUndefined(value[key])) {\n          value = value[key];\n      } else {\n          value = null;\n      }\n  });\n\n  return value;\n};\n\n\nvar updateFilter = _.debounce(function (template, filterText) {\n    console.log(\"filterText\", filterText);\n    template.context.filter.set(filterText);\n    Session.set(\"CRF_filter\", filterText);\n    template.context.currentPage.set(0);\n}, 200);\n\nvar updateHandle = _.debounce(function () {\n    var context = this;\n    if (context.server) {\n        var newHandle;\n\n        // Could use the table id, but this way we can wait to change the\n        // page until the new data is ready, so it doesn't move around\n        // while rows are added and removed\n        var publicationId = _.uniqueId();\n        var newPublishedRows = new Mongo.Collection('reactive-table-rows-' + publicationId);\n        context.nextPublicationId.set(publicationId);\n\n        var rowsPerPage = context.rowsPerPage.get();\n        var currentPage = context.currentPage.get();\n        var currentIndex = currentPage * rowsPerPage;\n\n        var options = {\n            skip: currentIndex,\n            limit: rowsPerPage\n        };\n        var sortQuery = {};\n\n        var currentSortField = _.findWhere(context.fields, {fieldId: context.sortKey.get()});\n        if (currentSortField) {\n            sortQuery[currentSortField.key] = context.sortDirection.get();\n        }\n        options.sort = sortQuery;\n        var filter = context.filter.get();\n\n        var onReady = function () {\n            if (publicationId === context.nextPublicationId.get()) {\n                context.ready.set(true);\n                context.publicationId.set(publicationId);\n                context.publishedRows = newPublishedRows;\n                var oldHandle = context.handle;\n                context.handle = newHandle;\n\n                if (oldHandle) {\n                    oldHandle.stop();\n                }\n            } else {\n                // another handle was created after this one\n                newHandle.stop();\n            }\n        };\n        var onError = function (error) {\n            console.log(\"ReactiveTable subscription error: \" + error);\n        };\n        newHandle = Meteor.subscribe(\n            \"reactive-table-\" + context.collection,\n            publicationId,\n            filter,\n            context.fields,\n            options,\n            context.rowsPerPage.get(),\n            {onReady: onReady, onError: onError}\n        );\n    }\n}, 200);\n\n\nvar getDefaultFalseSetting = function (key, templateData) {\n    if (!_.isUndefined(templateData[key]) &&\n        templateData[key]) {\n        return true;\n    }\n    if (!_.isUndefined(templateData.settings) &&\n        !_.isUndefined(templateData.settings[key]) &&\n        templateData.settings[key]) {\n        return true;\n    }\n    return false;\n};\n\nvar getDefaultTrueSetting = function (key, templateData) {\n    if (!_.isUndefined(templateData[key]) &&\n        !templateData[key]) {\n        return false;\n    }\n    if (!_.isUndefined(templateData.settings) &&\n        !_.isUndefined(templateData.settings[key]) &&\n        !templateData.settings[key]) {\n        return false;\n    }\n    return true;\n};\n\n/*\nif (Meter.isClient)\n    Template.registerHelper(\"CRF_filter\", function() {\n        var val = Session.get(\"CRF_filter\");\n        if (/^\\s+$/.test(val))\n            return null;\n        return val;\n    });\n*/\n\nvar setup = function () {\n    var context = {};\n    var oldContext = this.context || {};\n    context.templateData = this.data;\n    this.data.settings = this.data.settings || {};\n    var collection = this.data.collection || this.data.settings.collection || this.data;\n\n    if (!(collection instanceof Mongo.Collection)) {\n        if (_.isArray(collection)) {\n            // collection is an array\n            // create a new collection from the data\n            var data = collection;\n            collection = new Mongo.Collection(null);\n            _.each(data, function (doc) {\n                collection.insert(doc);\n            });\n        } else if (_.isFunction(collection.fetch)) {\n            // collection is a cursor\n            // create a new collection that will reactively update\n            var cursor = collection;\n            collection = new Mongo.Collection(null);\n\n            // copy over transforms from collection-helper package\n            collection._transform = cursor._transform;\n            collection._name = cursor.collection._name;\n\n            var addedCallback = function (doc) {\n                collection.insert(doc);\n            };\n            var changedCallback = function (doc, oldDoc) {\n                collection.update(oldDoc._id, doc);\n            };\n            var removedCallback = function (oldDoc) {\n                collection.remove(oldDoc._id);\n            };\n            cursor.observe({added: addedCallback, changed: changedCallback, removed: removedCallback});\n        } else if (_.isString(collection)) {\n            // server side publication\n            context.server = true;\n            context.publicationId = new ReactiveVar();\n            context.nextPublicationId = new ReactiveVar();\n            context.publishedRows = new Mongo.Collection(null);\n        } else {\n            console.error(\"reactiveTable error: argument is not an instance of Mongo.Collection, a cursor, or an array\");\n            collection = new Mongo.Collection(null);\n        }\n    }\n    context.collection = collection;\n\n    var fields = this.data.fields || this.data.settings.fields || {};\n    if (_.keys(fields).length < 1 ||\n        (_.keys(fields).length === 1 &&\n         _.keys(fields)[0] === 'hash')) {\n        fields = _.without(_.keys(collection.findOne() || {}), '_id');\n    }\n\n    var fieldIdsArePresentAndUnique = function (fields) {\n        var uniqueFieldIds = _.chain(fields)\n            .filter(function (field) {\n                return !_.isUndefined(field.fieldId)\n            })\n            .map(function (field) {\n                return field.fieldId;\n            })\n            .uniq()\n            .value();\n        return uniqueFieldIds.length === fields.length;\n    };\n\n    // If at least one field specifies a fieldId, all fields must specify a \n    // fieldId with a unique value\n    if (_.find(fields, function (field) {\n        return !_.isUndefined(field.fieldId)\n        }) && !fieldIdsArePresentAndUnique(fields)) {\n        console.error(\"reactiveTable error: all fields must have a unique-valued fieldId if at least one has a fieldId attribute\");\n        fields = [];\n    } \n\n    var sortKey = null;\n    var sortDirection = 1;\n    var filterNulls = true;\n\n    var normalizeField = function (field) {\n        if (typeof field === 'string') {\n            return {key: field, label: field};\n        } else {\n            return field;\n        }\n    };\n\n    var parseField = function (field, i) {\n        var normalizedField = normalizeField(field);\n        if (!_.has(normalizedField, 'fieldId')) {\n            // Default fieldId to index in fields array if not present\n            normalizedField.fieldId = i.toString();\n        }\n        if (normalizedField.sort) {\n            sortKey = normalizedField.fieldId;\n            if (normalizedField.sort === 'desc' || normalizedField.sort === 'descending'  || normalizedField.sort === -1) {\n                sortDirection = -1;\n            }\n        }\n        return normalizedField;\n    };\n\n    fields = _.map(fields, parseField);\n    if (!sortKey) {\n        // Default to sort of first column\n        sortKey = (fields[0]) ? fields[0].fieldId : null;\n    }\n    context.fields = fields;\n    context.sortKey = !_.isUndefined(oldContext.sortKey) ? oldContext.sortKey : new ReactiveVar(sortKey);\n    context.sortDirection = !_.isUndefined(oldContext.sortDirection) ? oldContext.sortDirection : new ReactiveVar(sortDirection);\n    context.filterNulls = !_.isUndefined(oldContext.filterNulls) ? oldContext.sortDirection : new ReactiveVar(filterNulls);\n\n    var visibleFields = [];\n    _.each(fields, function (field, i) {\n        visibleFields.push({fieldId:field.fieldId, isVisible:getDefaultFieldVisibility(field)});\n    });\n    context.visibleFields = (!_.isUndefined(oldContext.visibleFields) && !_.isEmpty(oldContext.visibleFields)) ? oldContext.visibleFields : new ReactiveVar(visibleFields);\n\n\n    var rowClass = this.data.rowClass || this.data.settings.rowClass || function() {return ''};\n    if (typeof rowClass === 'string') {\n        var tmp = rowClass;\n        rowClass = function(obj) { return tmp; };\n    }\n    context.rowClass = rowClass;\n\n    context.class = this.data.class || this.data.settings.class || 'table table-striped table-hover col-sm-12';\n    context.id = this.data.id || this.data.settings.id || _.uniqueId('reactive-table-');\n\n    context.showNavigation = this.data.showNavigation || this.data.settings.showNavigation || 'always';\n    context.showNavigationRowsPerPage = getDefaultTrueSetting('showNavigationRowsPerPage', this.data);\n    context.rowsPerPage =  !_.isUndefined(oldContext.rowsPerPage) ? oldContext.rowsPerPage : new ReactiveVar(this.data.rowsPerPage || this.data.settings.rowsPerPage || 10);\n    context.currentPage = !_.isUndefined(oldContext.currentPage) ? oldContext.currentPage : new ReactiveVar(0);\n\n    context.filter = !_.isUndefined(oldContext.filter) ? oldContext.filter : new ReactiveVar(null);\n    context.showFilter = getDefaultTrueSetting('showFilter', this.data);\n\n    context.showColumnToggles = getDefaultFalseSetting('showColumnToggles', this.data);\n\n    if (_.isUndefined(this.data.useFontAwesome)) {\n        if (!_.isUndefined(this.data.settings.useFontAwesome)) {\n            context.useFontAwesome = this.data.settings.useFontAwesome;\n        } else if (!_.isUndefined(Package['fortawesome:fontawesome'])) {\n            context.useFontAwesome = true;\n        } else {\n            context.useFontAwesome = false;\n        }\n    } else {\n        context.useFontAwesome = this.data.useFontAwesome;\n    }\n    context.enableRegex = getDefaultFalseSetting('enableRegex', this.data);\n    \n    context.ready = new ReactiveVar(true);\n\n    if (context.server) {\n        context.ready.set(false);\n        updateHandle.call(context);\n    }\n\n    context.reactiveTableSetup = true;\n\n    context.filter.set(Session.get(\"CRF_filter\"));\n\n    this.context = context;\n};\n\n\nvar getDefaultFieldVisibility = function (field) {\n    return !field.hidden || (_.isFunction(field.hidden) && !field.hidden());\n}\n\nvar getPageCount = function () {\n    var count;\n    var rowsPerPage = this.rowsPerPage.get();\n    if (this.server) {\n        count = ReactiveTableCounts.findOne(this.publicationId.get());\n        return Math.ceil((count ? count.count : 0) / rowsPerPage);\n    } else {\n        var filterQuery = getFilterQuery(this.filter.get(), this.fields, {enableRegex: this.enableRegex});\n        count = this.collection.find(filterQuery).count();\n        return Math.ceil(count / rowsPerPage);\n    }\n};\n\nfunction excludeNulls(filterQuery, sortKeyField_key) {\n    if (sortKeyField_key in filterQuery) {\n        var previousQuery = filterQuery[sortKeyField_key];\n        filterQuery[sortKeyField_key] = \n            {$and: [\n                    previousQuery,\n                    { $ne: null } \n                ]\n            };\n    } else\n        filterQuery[sortKeyField_key] = { $ne: null } \n}\n\n\nTemplate.reactiveTable.helpers({\n\n    'context': function () {\n        if (!Template.instance().context ||\n            !_.isEqual(this, Template.instance().context.templateData)) {\n            setup.call(Template.instance());\n        }\n        return Template.instance().context;\n    },\n\n    'ready' : function () {\n        return this.ready.get();\n    },\n\n    'getField': function (object) {\n        var fn = this.fn || function (value) { return value; };\n        var key = this.key || this;\n        var value = get(object, key);\n        return fn(value, object);\n    },\n\n    'getFieldIndex': function () {\n        return _.indexOf(Template.parentData(1).fields, this);\n    },\n\n    'getFieldFieldId': function () {\n        return this.fieldId;\n    },\n\n    'getKey': function () {\n        return this.key || this;\n    },\n\n    'getHeaderClass': function () {\n        if (_.isUndefined(this.headerClass)) {\n            return this.key;\n        }\n        var css;\n        if (_.isFunction(this.headerClass)) {\n            css = this.headerClass();\n        } else {\n            css = this.headerClass;\n        }\n        return css;\n    },\n\n    'getCellClass': function (object) {\n        if (_.isUndefined(this.cellClass)) {\n            return this.key;\n        }\n        var css;\n        if (_.isFunction(this.cellClass)) {\n            var value = get(object, this.key);\n            css = this.cellClass(value, object);\n        } else {\n            css = this.cellClass;\n        }\n        return css;\n    },\n  \n    'labelIsTemplate': function () {\n        return this.label && _.isObject(this.label) && this.label instanceof Blaze.Template;\n    },\n\n    'getLabel': function () {\n        return _.isString(this.label) ? this.label : this.label();\n    },\n\n    'isSortKey': function () {\n        var parentData = Template.parentData(1);\n        return parentData.sortKey.get() === this.fieldId;\n    },\n\n    'isSortable': function () {\n        return (this.sortable == undefined) ? true : this.sortable;\n    },\n\n    'isVisible': function () {\n        var self = this; // is a field object\n        var topLevelData;\n        if (Template.parentData(2) && Template.parentData(2).reactiveTableSetup) {\n          topLevelData = Template.parentData(2);\n        } else {\n          topLevelData = Template.parentData(1);\n        }\n        var visibleFields = topLevelData.visibleFields.get();\n        var fields = topLevelData.fields;\n\n        var visibleField = _.findWhere(visibleFields, {fieldId: self.fieldId});\n        if (visibleField) {\n            return visibleField.isVisible;\n        } else {\n            // Add field to visibleFields list\n            var _isVisible = getDefaultFieldVisibility(self);\n            visibleFields.push({fieldId:self.fieldId, isVisible:_isVisible});\n            topLevelData.visibleFields.set(visibleFields);\n            return _isVisible;\n        }\n    },\n\n    'isAscending' : function () {\n        var sortDirection = Template.parentData(1).sortDirection.get();\n        return (sortDirection === 1);\n    },\n\n    'sortedRows': function () {\n        if (this.server) {\n            return this.publishedRows.find({\n              \"reactive-table-id\": this.publicationId.get()\n            }, {\n              sort: {\n                \"reactive-table-sort\": 1\n              }\n            });\n        } else  {\n            var sortDirection = this.sortDirection.get();\n            var filterNulls = this.filterNulls.get();\n            var sortKeyFieldId = this.sortKey.get();\n            var sortKeyField = _.findWhere(this.fields, {fieldId: sortKeyFieldId});\n\n            var limit = this.rowsPerPage.get();\n            var currentPage = this.currentPage.get();\n            var skip = currentPage * limit;\n            var filterQuery = getFilterQuery(this.filter.get(), this.fields, {enableRegex: this.enableRegex});\n\n\n            if (!sortKeyField) {\n                // No sort field set, return unsorted collection\n                return this.collection.find(filterQuery, {\n                    skip: skip,\n                    limit: limit\n                }); \n            } else if (sortKeyField.fn && !sortKeyField.sortByValue) {\n\n                if (filterNulls)\n                    excludeNulls(filterQuery, sortKeyField.key);\n\n                var data = this.collection.find(filterQuery).fetch();\n                var sorted =_.sortBy(data, function (object) {\n                    return sortKeyField.fn(object[sortKeyField.key], object);\n                });\n                if (sortDirection === -1) {\n                    sorted = sorted.reverse();\n                }\n                return sorted.slice(skip, skip + limit);\n            } else {\n                var sortKey = sortKeyField.key || sortKeyField;\n                var sortQuery = {};\n\n                excludeNulls(filterQuery, sortKeyField.key);\n\n                filterQuery[sortKeyField.key]  = { $ne: null };  // don't let nulls in\n\n                return this.collection.find(filterQuery, {\n                    sort: sortQuery,\n                    skip: skip,\n                    limit: limit\n                });\n            }\n        }\n    },\n\n    'filter' : function () {\n        return this.filter.get() || '';\n    },\n\n    'getPageCount' : getPageCount,\n\n    'getRowsPerPage' : function () {\n        return this.rowsPerPage.get();\n    },\n\n    'getCurrentPage' : function () {\n        return 1 + this.currentPage.get();\n    },\n\n    'isntFirstPage' : function () {\n        return this.currentPage.get() > 0;\n    },\n\n    'isntLastPage' : function () {\n        var currentPage = 1 + this.currentPage.get();\n        var pageCount = getPageCount.call(this);\n        return currentPage < pageCount;\n    },\n\n    'showNavigation' : function () {\n        if (this.showNavigation === 'always') return true;\n        if (this.showNavigation === 'never') return false;\n        return getPageCount.call(this) > 1;\n    }\n});\n\nTemplate.reactiveTable.events({\n    'change .filterNulls': function (event) {\n        var template = Template.instance();\n        console.log(\"filterNulls\", event.target.value);\n        template.context.filterNulls.set(event.target.checked);\n    }, \n    'click .reactive-table .sortable': function (event) {\n        var template = Template.instance();\n        var target = $(event.target).is('i') ? $(event.target).parent() : $(event.target);\n        var sortFieldId = target.attr('fieldid');\n        var currentSortFieldId = template.context.sortKey.get();\n        if (currentSortFieldId === sortFieldId) {\n            var sortDirection = -1 * template.context.sortDirection.get();\n            template.context.sortDirection.set(sortDirection);\n        } else {\n            template.context.sortKey.set(sortFieldId);\n        }\n        updateHandle.call(template.context);\n    },\n\n    'change .reactive-table-columns-dropdown input': function (event) {\n        var template = Template.instance();\n        var target = $(event.target);\n        var fieldId = target.attr('data-fieldid');\n        var visibleFields = template.context.visibleFields.get();\n        var visibleField = _.findWhere(visibleFields, {fieldId: fieldId});\n        if (visibleField) {\n            // Toggle visibility\n            visibleField.isVisible = !visibleField.isVisible;\n            template.context.visibleFields.set(visibleFields);\n        }\n    },\n\n    'keyup .reactive-table-filter .reactive-table-input, input .reactive-table-filter .reactive-table-input': function (event) {\n        var template = Template.instance();\n        var filterText = $(event.target).val();\n        updateFilter(template, filterText);\n        updateHandle.call(template.context);\n    },\n\n    'change .reactive-table-navigation .rows-per-page input': function (event) {\n        var rowsPerPage = Math.max(~~$(event.target).val(), 1);\n        Template.instance().context.rowsPerPage.set(rowsPerPage);\n        $(event.target).val(rowsPerPage);\n        updateHandle.call(Template.instance().context);\n    },\n\n    'change .reactive-table-navigation .page-number input': function (event) {\n        var currentPage = Math.max(~~$(event.target).val(), 1);\n        var pageCount = getPageCount.call(this);\n        if (currentPage > pageCount) {\n          currentPage = pageCount;\n        }\n        if (currentPage < 0) {\n          currentPage = 1;\n        }\n        Template.instance().context.currentPage.set(currentPage - 1);\n        $(event.target).val(currentPage);\n        updateHandle.call(Template.instance().context);\n    },\n\n    'click .reactive-table-navigation .previous-page': function (event) {\n        var template = Template.instance();\n        var currentPage = template.context.currentPage.get();\n        template.context.currentPage.set(currentPage - 1);\n        updateHandle.call(template.context);\n    },\n\n    'click .reactive-table-navigation .next-page': function (event) {\n        var template = Template.instance();\n        var currentPage = template.context.currentPage.get();\n        template.context.currentPage.set(currentPage + 1);\n        updateHandle.call(template.context);\n    }\n});\n","var parseFilterString = function (filterString) {\n  var startQuoteRegExp = /^[\\'\\\"]/;\n  var endQuoteRegExp = /[\\'\\\"]$/;\n  var filters = [];\n  var words = filterString.split(' ');\n\n  var inQuote = false;\n  var quotedWord = '';\n  _.each(words, function (word) {\n    if (inQuote) {\n      if (endQuoteRegExp.test(word)) {\n        filters.push(quotedWord + ' ' + word.slice(0, word.length - 1));\n        inQuote = false;\n        quotedWord = '';\n      } else {\n        quotedWord = quotedWord + ' ' + word;\n      }\n    } else if (startQuoteRegExp.test(word)) {\n      if (endQuoteRegExp.test(word)) {\n        filters.push(word.slice(1, word.length - 1));\n      } else {\n        inQuote = true;\n        quotedWord = word.slice(1, word.length);\n      }\n    } else {\n      filters.push(word);\n    }\n  });\n  return filters;\n};\n\nvar escapeRegex = function(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n};\n\ngetFilterQuery = function (filter, fields, settings) {\n  settings = settings || {};\n  if (settings.enableRegex === undefined) {\n    settings.enableRegex = false;\n  }\n  if (settings.fields) {\n    if (_.any(settings.fields, function (include) { return include; })) {\n      fields = _.filter(fields, function (field) {\n        return settings.fields[field.key];\n      });\n    } else {\n      fields = _.filter(fields, function (field) {\n        return _.isUndefined(settings.fields[field.key]) || settings.fields[field.key];\n      });\n    }\n  }\n  var numberRegExp = /^\\d+$/;\n  var queryList = [];\n  if (filter) {\n    var filters = parseFilterString(filter);\n    _.each(filters, function (filterWord) {\n      if (settings.enableRegex === false) {\n        filterWord = escapeRegex(filterWord);\n      }\n      var filterQueryList = [];\n      _.each(fields, function (field) {\n        var filterRegExp = new RegExp(filterWord, 'i');\n        var query = {};\n        query[field.key || field] = filterRegExp;\n        filterQueryList.push(query);\n\n        if (numberRegExp.test(filterWord)) {\n          var numberQuery = {};\n          numberQuery[field.key || field] = parseInt(filterWord, 10);\n          filterQueryList.push(numberQuery);\n        }\n      });\n      if (filterQueryList.length) {\n        var filterQuery = {'$or': filterQueryList};\n        queryList.push(filterQuery);\n      }\n    });\n  }\n  return queryList.length ? {'$and': queryList} : {};\n};\n"]}